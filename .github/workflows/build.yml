name: ci

on: push

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Cache packages when the branch is not update-dependencies or dependabot/*
      - name: Resolve caching
        id: cache
        if: ${{ github.ref_name != 'update-dependencies' && !startsWith(github.ref_name, 'dependabot/') }}
        run: echo "::set-output name=PACKAGE::yarn"

      - name: Use Node.js
        uses: actions/setup-node@v3.4.1
        with:
          node-version-file: ".nvmrc"
          cache: ${{ steps.cache.outputs.PACKAGE }}
          cache-dependency-path: "**/yarn.lock"
          scope: '@moonwalker'

      - name: Install dependencies
        run: yarn && yarn lerna bootstrap
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - run: yarn lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Cache packages when the branch is not update-dependencies or dependabot/*
      - name: Resolve caching
        id: cache
        if: ${{ github.ref_name != 'update-dependencies' && !startsWith(github.ref_name, 'dependabot/') }}
        run: echo "::set-output name=PACKAGE::yarn"

      - name: Use Node.js
        uses: actions/setup-node@v3.4.1
        with:
          node-version-file: ".nvmrc"
          cache: ${{ steps.cache.outputs.PACKAGE }}
          cache-dependency-path: "**/yarn.lock"
          scope: '@moonwalker'

      - name: Install dependencies
        run: yarn && yarn lerna bootstrap
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - run: yarn test

  build:
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Cache packages when the branch is not update-dependencies or dependabot/*
      - name: Resolve caching
        id: cache
        if: ${{ github.ref_name != 'update-dependencies' && !startsWith(github.ref_name, 'dependabot/') }}
        run: echo "::set-output name=PACKAGE::yarn"

      - name: Use Node.js
        uses: actions/setup-node@v3.4.1
        with:
          node-version-file: ".nvmrc"
          cache: ${{ steps.cache.outputs.PACKAGE }}
          cache-dependency-path: "**/yarn.lock"
          scope: '@moonwalker'

      - name: Install dependencies
        run: yarn && yarn lerna bootstrap
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - run: yarn build

  publish:
    needs:
      - build

    if: contains(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Cache packages when the branch is not update-dependencies or dependabot/*
      - name: Resolve caching
        id: cache
        if: ${{ github.ref_name != 'update-dependencies' && !startsWith(github.ref_name, 'dependabot/') }}
        run: echo "::set-output name=PACKAGE::yarn"

      - name: Use Node.js
        uses: actions/setup-node@v3.4.1
        with:
          node-version-file: ".nvmrc"
          cache: ${{ steps.cache.outputs.PACKAGE }}
          cache-dependency-path: "**/yarn.lock"
          scope: '@moonwalker'

      - name: Install dependencies
        run: yarn && yarn lerna bootstrap
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - run: yarn build

      - run: npm run release
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
