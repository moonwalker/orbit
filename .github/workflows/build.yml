name: ci

on: push

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v2
        with:
          always-auth: true
          registry-url: 'https://registry.npmjs.org'
          node-version: ${{matrix.node-version}}
          scope: '@moonwalker'

      # Cache yarn dependencies
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn --frozen-lockfile && yarn lerna bootstrap
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - run: yarn lint

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v2
        with:
          always-auth: true
          registry-url: 'https://registry.npmjs.org'
          node-version: ${{matrix.node-version}}
          scope: '@moonwalker'

      # Cache yarn dependencies
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn --frozen-lockfile && yarn lerna bootstrap
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - run: yarn test

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v2
        with:
          always-auth: true
          registry-url: 'https://registry.npmjs.org'
          node-version: ${{matrix.node-version}}
          scope: '@moonwalker'

      # Cache yarn dependencies
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn --frozen-lockfile && yarn lerna bootstrap
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - run: yarn build

      - name: Send webpack stats to relative-ci
        run: cd packages/ui-react && npx relative-ci-agent
        env:
          RELATIVE_CI_KEY: ${{secrets.RELATIVE_CI_KEY}}

  publish:
    needs:
      - lint
      - test
      - build

    if: contains(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v2
        with:
          always-auth: true
          registry-url: 'https://registry.npmjs.org'
          node-version: ${{matrix.node-version}}
          scope: '@moonwalker'

      # Cache yarn dependencies
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn --frozen-lockfile && yarn lerna bootstrap
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - run: yarn build

      - run: npm run release
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
